#Server Code
import socket
import threading

HOST = '127.0.0.1'
PORT = 12345
clients = []


def handle_client(client_socket, client_address):
    print(f"New connection from {client_address}")

    try:
        while True:
            message = client_socket.recv(1024).decode()
            if not message:
                break
            print(f"Received from {client_address}: {message}")
            broadcast(message, client_socket)
    except Exception as e:
        print(f"Error handling client {client_address}: {e}")
    finally:
        client_socket.close()
        clients.remove(client_socket)
        print(f"Connection from {client_address} closed")


def broadcast(message, sender_socket):
    for client in clients:
        if client != sender_socket:
            try:
                client.sendall(message.encode())
            except Exception as e:
                print(f"Error broadcasting message to a client: {e}")


def main():
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    try:
        server_socket.bind((HOST, PORT))
        server_socket.listen()
        print("Server is listening...")

        while True:
            client_socket, client_address = server_socket.accept()
            clients.append(client_socket)

            client_thread = threading.Thread(target=handle_client, args=(client_socket, client_address))
            client_thread.start()
    except Exception as e:
        print(f"Error in server: {e}")
    finally:
        server_socket.close()


if __name__ == "__main__":
    main()
